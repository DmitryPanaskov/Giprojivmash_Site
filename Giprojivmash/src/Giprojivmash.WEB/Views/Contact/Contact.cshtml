@model Giprojivmash.WEB.Models.Contact.ContactPageViewModel
@using Giprojivmash.DataModels.Enums

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container">
    <div class="row">
        <div class="d-none d-lg-block col-lg-4">
            <ul class="nav-vertical-menu">
                @for (var i = 0; i < Model.Sidebar.Count; i++)
                {
                    @if (Model.Sidebar.ElementAt(i).SidebarName == Model.PageName)
                    {
                        <li class="nav-link-vertival-menu current">
                            <a asp-action="@Model.Sidebar.ElementAt(i).SidebarAction" asp-controller="Contact" aria-selected="false">@Model.Sidebar.ElementAt(i).SidebarName</a>
                        </li>
                    }
                    else
                    {
                        <li class="nav-link-vertival-menu">
                            <a asp-action="@Model.Sidebar.ElementAt(i).SidebarAction" asp-controller="Contact" aria-selected="false">@Model.Sidebar.ElementAt(i).SidebarName</a>
                        </li>
                    }
                }
            </ul>
        </div>
        <div class="col-lg-8 col-sm-12">
            <h1>@Model.PageName</h1>
            @{
                var contacts = Model.ContactList.ToList();
            }
            @for (var i = 0; i < contacts.Count; i++)
            {
                var person = contacts.ElementAt(i);
                var officialName = person.FirstName + " " + person.Patronymic;

                <div class="row">
                    <div class="d-none d-sm-block col-md-4">
                        @{
                            if (person.Photo != null)
                            {
                                <img class="img img-fluid rounded-circle" alt="100x100" src="~/images/photos/@person.Photo" />
                            }
                            else
                            {
                                <img class="img img-fluid rounded-circle" alt="100x100" src="~/images/photos/imgNotAvailable.png" />
                            }
                        }
                    </div>
                    <div class="col-md-8 col-sm-12">
                        <h2 class="position">@person.Position</h2>
                        <h4 class="font-weight-bold">@person.LastName</h4>
                        <h4>@officialName</h4>
                        @{
                            var dataPerson = Model.ContactDataList.Where(m => m.ContactId == person.Id).ToList();
                            var contactDataTypeName = "";
                            var contactDataTypeNameSubName = "";
                        }
                        @for (var j = 0; j < dataPerson.Count; j++)
                        {
                            switch (dataPerson.ElementAt(j).ContactDataType)
                            {
                                case ContactDataType.WorkTelephone:
                                    contactDataTypeName = "тел.:";
                                    contactDataTypeNameSubName = "tel:";
                                    break;
                                case ContactDataType.MobileTelephone:
                                    contactDataTypeName = "моб.тел.:";
                                    contactDataTypeNameSubName = "tel:";
                                    break;
                                case ContactDataType.Fax:
                                    contactDataTypeName = "факс:";
                                    contactDataTypeNameSubName = "fax:";
                                    break;
                                case ContactDataType.Email:
                                    contactDataTypeName = "email:";
                                    contactDataTypeNameSubName = "mailto:";
                                    break;
                                default:
                                    contactDataTypeName = "";
                                    contactDataTypeNameSubName = "";
                                    break;
                            }
                            var subData = contactDataTypeNameSubName + dataPerson.ElementAt(j).SubData;
                            if (contactDataTypeName != string.Empty)
                            {
                                <h5 class="contactData">
                                    @contactDataTypeName<a href="@subData">@dataPerson.ElementAt(j).Data</a>
                                </h5>
                            }
                        }
                    </div>
                </div>
                <br />
            }
        </div>
    </div>
</div>

<style>
    .position {
        padding: 0 0 1rem 0;
    }

    .contactData a {
        padding: 0 0.5rem;
    }
</style>