@model Giprojivmash.WEB.Models.Contact.ContactPageViewModel
@using Giprojivmash.DataModels.Enums

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container">
    <div class="row">
        <div class="d-none d-lg-block col-lg-4">
            <ul class="nav-vertical-menu">
                @for (var i = 0; i < Model.Sidebar.Count; i++)
                {
                    @if (Model.Sidebar.ElementAt(i).SidebarName == Model.PageName)
                    {
                        <li class="nav-link-vertival-menu current">
                            <a asp-action="@Model.Sidebar.ElementAt(i).SidebarAction" asp-controller="Contact" aria-selected="false">@Model.Sidebar.ElementAt(i).SidebarName</a>
                        </li>
                    }
                    else
                    {
                        <li class="nav-link-vertival-menu">
                            <a asp-action="@Model.Sidebar.ElementAt(i).SidebarAction" asp-controller="Contact" aria-selected="false">@Model.Sidebar.ElementAt(i).SidebarName</a>
                        </li>
                    }
                }
            </ul>
        </div>
        <div class="col-lg-8 col-sm-12">
            <h1 class="d-block d-sm-block d-sm-none d-lg-none d-xl-none">@Model.PageName</h1>
            @{
                var contacts = Model.ContactList.ToList();
            }
            @for (var i = 0; i < contacts.Count; i++)
            {
                var person = contacts.ElementAt(i);
                var officialName = person.FirstName + " " + person.Patronymic;

                <div class="row">
                    <div class="col-6 col-md-3">
                        @{
                            if (person.Photo != null)
                            {
                                <img class="img img-fluid rounded-circle" alt="@person.Description" src="~/images/photos/@person.Photo" />
                            }
                            else
                            {
                                if (person.Gender == Gender.Male)
                                {
                                    <img class="img img-fluid rounded-circle" alt="" src="~/images/photos/img_not_male.jpg" />
                                }
                                else
                                {
                                    <img class="img img-fluid rounded-circle" alt="" src="~/images/photos/img_not_female.jpg" />
                                }

                            }
                        }
                    </div>
                    <div class="col-12 col-md-9">
                        <h4 class="position">@person.Position</h4>
                        <p class="contactData">
                            <b>@person.LastName</b><br />
                            @officialName<br />

                            @{
                                var dataPerson = Model.ContactDataList.Where(m => m.ContactId == person.Id).ToList();
                                var contactDataTypeName = "";
                                var contactDataTypeNameSubName = "";
                            }
                            @for (var j = 0; j < dataPerson.Count; j++)
                            {
                                switch (dataPerson.ElementAt(j).ContactDataType)
                                {
                                    case ContactDataType.WorkTelephone:
                                        contactDataTypeName = "тел.:";
                                        contactDataTypeNameSubName = "tel:";
                                        break;
                                    case ContactDataType.MobileTelephone:
                                        contactDataTypeName = "моб.тел.:";
                                        contactDataTypeNameSubName = "tel:";
                                        break;
                                    case ContactDataType.Fax:
                                        contactDataTypeName = "факс:";
                                        contactDataTypeNameSubName = "fax:";
                                        break;
                                    case ContactDataType.Email:
                                        contactDataTypeName = "email:";
                                        contactDataTypeNameSubName = "mailto:";
                                        break;
                                    default:
                                        contactDataTypeName = "";
                                        contactDataTypeNameSubName = "";
                                        break;
                                }
                                var subData = contactDataTypeNameSubName + dataPerson.ElementAt(j).SubData;
                                if (contactDataTypeName != string.Empty)
                                {
                                    @contactDataTypeName<a href="@subData">@dataPerson.ElementAt(j).Data</a><br />
                                }
                            }
                        </p>
                    </div>
                </div>
                <br />
            }
        </div>
    </div>
</div>

<style>
    .position {
        padding: 0 0 1rem 0;
    }

    .contactData a {
        padding: 0 0.5rem;
    }
</style>